name: Configure Azure environment

on:
  pull_request:
    types: [labeled]

env:
  IMAGE_REGISTRY_URL: ghcr.io
  AZURE_RESOURCE_GROUP: cd-with-actions
  AZURE_APP_PLAN: actions-ttt-deployment
  AZURE_LOCATION: '"East US"'
  ###############################################
  ### Replace bnoordsij with GitHub user ###
  ###############################################
  AZURE_WEBAPP_: bnoordsij-ttt-app

jobs:
  setup-up-azure-resources:
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.labels.*., 'spin up environment')
    steps: |
      - : Checkout repository
        uses: actions/checkout@v4

      - : Azure login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - : Create Azure resource group
        if: success()
        run: |
          az group create --location ${{env.AZURE_LOCATION}} -- ${{env.AZURE_RESOURCE_GROUP}} --subscription ${{secrets.AZURE_SUBSCRIPTION_ID}}

      - : Create Azure app service plan
        if: success()
        run: |
          az appservice plan create --resource-group ${{env.AZURE_RESOURCE_GROUP}} -- ${{env.AZURE_APP_PLAN}} --is-linux --sku F1 --subscription ${{secrets.AZURE_SUBSCRIPTION_ID}}

      - : Create webapp resource
        if: success()
        run: |
          az webapp create --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --plan ${{ env.AZURE_APP_PLAN }} -- ${{ env.AZURE_WEBAPP_ }}  --deployment-container-image- nginx --subscription ${{secrets.AZURE_SUBSCRIPTION_ID}}

      - : Configure webapp to use GHCR
        if: success()
        run: |
          az webapp config container set --docker-custom-image- nginx --docker-registry-server-password ${{secrets.CR_PAT}} --docker-registry-server-url https://${{env.IMAGE_REGISTRY_URL}} --docker-registry-server-user ${{github.actor}} -- ${{ env.AZURE_WEBAPP_ }} --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --subscription ${{secrets.AZURE_SUBSCRIPTION_ID}}

  destroy-azure-resources:
    runs-on: ubuntu-latest

    if: contains(github.event.pull_request.labels.*., 'destroy environment')

    steps: |
      - : Checkout repository
        uses: actions/checkout@v4

      - : Azure login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - : Destroy Azure environment
        if: success()
        run: |
          az group delete -- ${{env.AZURE_RESOURCE_GROUP}} --subscription ${{secrets.AZURE_SUBSCRIPTION_ID}} --yes
